

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Thu Apr 12 09:53:47 2018

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    23  0000                     
    24                           	psect	nvCOMRAM
    25  00003A                     __pnvCOMRAM:
    26                           	opt stack 0
    27  00003A                     _TFNum:
    28                           	opt stack 0
    29  00003A                     	ds	1
    30  00003B                     _eusart1TxBufferRemaining:
    31                           	opt stack 0
    32  00003B                     	ds	1
    33  0000                     _ANSELA	set	3896
    34  0000                     _ANSELB	set	3897
    35  0000                     _ANSELC	set	3898
    36  0000                     _ANSELD	set	3899
    37  0000                     _ANSELE	set	3900
    38  0000                     _BAUDCON1	set	4024
    39  0000                     _INTCON2bits	set	4081
    40  0000                     _INTCONbits	set	4082
    41  0000                     _LATA	set	3977
    42  0000                     _LATAbits	set	3977
    43  0000                     _LATB	set	3978
    44  0000                     _LATBbits	set	3978
    45  0000                     _LATC	set	3979
    46  0000                     _LATCbits	set	3979
    47  0000                     _LATD	set	3980
    48  0000                     _LATDbits	set	3980
    49  0000                     _LATE	set	3981
    50  0000                     _LATEbits	set	3981
    51  0000                     _OSCCON	set	4051
    52  0000                     _OSCCON2	set	4050
    53  0000                     _OSCTUNE	set	3995
    54  0000                     _PIE1bits	set	3997
    55  0000                     _PIR1bits	set	3998
    56  0000                     _RCONbits	set	4048
    57  0000                     _RCREG1	set	4014
    58  0000                     _RCSTA1	set	4011
    59  0000                     _RCSTA1bits	set	4011
    60  0000                     _SPBRG1	set	4015
    61  0000                     _SPBRGH1	set	4016
    62  0000                     _TRISA	set	3986
    63  0000                     _TRISB	set	3987
    64  0000                     _TRISC	set	3988
    65  0000                     _TRISD	set	3989
    66  0000                     _TRISE	set	3990
    67  0000                     _TXREG1	set	4013
    68  0000                     _TXSTA1	set	4012
    69  0000                     _WPUB	set	3937
    70                           
    71                           ; #config settings
    72  0000                     
    73                           	psect	cinit
    74  0005B8                     __pcinit:
    75                           	opt stack 0
    76  0005B8                     start_initialization:
    77                           	opt stack 0
    78  0005B8                     __initialization:
    79                           	opt stack 0
    80                           
    81                           ; Clear objects allocated to COMRAM (37 bytes)
    82  0005B8  EE00  F001         	lfsr	0,__pbssCOMRAM
    83  0005BC  0E25               	movlw	37
    84  0005BE                     clear_0:
    85  0005BE  6AEE               	clrf	postinc0,c
    86  0005C0  06E8               	decf	wreg,f,c
    87  0005C2  E1FD               	bnz	clear_0
    88  0005C4                     end_of_initialization:
    89                           	opt stack 0
    90  0005C4                     __end_of__initialization:
    91                           	opt stack 0
    92  0005C4  0E00               	movlw	low (__Lmediumconst shr (0+16))
    93  0005C6  6EF8               	movwf	tblptru,c
    94  0005C8  0100               	movlb	0
    95  0005CA  EFDB  F001         	goto	_main	;jump to C main() function
    96                           tblptru	equ	0xFF8
    97                           postinc0	equ	0xFEE
    98                           wreg	equ	0xFE8
    99                           
   100                           	psect	bssCOMRAM
   101  000001                     __pbssCOMRAM:
   102                           	opt stack 0
   103  000001                     _site0_IL:
   104                           	opt stack 0
   105  000001                     	ds	16
   106  000011                     _eusart1RxBuffer:
   107                           	opt stack 0
   108  000011                     	ds	8
   109  000019                     _eusart1TxBuffer:
   110                           	opt stack 0
   111  000019                     	ds	8
   112  000021                     _eusart1RxCount:
   113                           	opt stack 0
   114  000021                     	ds	1
   115  000022                     _eusart1RxHead:
   116                           	opt stack 0
   117  000022                     	ds	1
   118  000023                     _eusart1RxTail:
   119                           	opt stack 0
   120  000023                     	ds	1
   121  000024                     _eusart1TxHead:
   122                           	opt stack 0
   123  000024                     	ds	1
   124  000025                     _eusart1TxTail:
   125                           	opt stack 0
   126  000025                     	ds	1
   127                           tblptru	equ	0xFF8
   128                           postinc0	equ	0xFEE
   129                           wreg	equ	0xFE8
   130                           
   131                           	psect	cstackCOMRAM
   132  000026                     __pcstackCOMRAM:
   133                           	opt stack 0
   134  000026                     ??_INTERRUPT_InterruptManager:
   135  000026                     
   136                           ; 1 bytes @ 0x0
   137  000026                     	ds	14
   138  000034                     EUSART1_Read@readValue:
   139                           	opt stack 0
   140  000034                     EUSART1_Write@txData:
   141                           	opt stack 0
   142                           
   143                           ; 1 bytes @ 0xE
   144  000034                     	ds	1
   145  000035                     ??_relayControl:
   146                           
   147                           ; 0 bytes @ 0xF
   148  000035                     	ds	1
   149  000036                     relayControl@data:
   150                           	opt stack 0
   151                           
   152                           ; 1 bytes @ 0x10
   153  000036                     	ds	1
   154  000037                     relayControl@count:
   155                           	opt stack 0
   156                           
   157                           ; 2 bytes @ 0x11
   158  000037                     	ds	2
   159  000039                     main@RxData:
   160                           	opt stack 0
   161                           
   162                           ; 1 bytes @ 0x13
   163  000039                     	ds	1
   164                           tblptru	equ	0xFF8
   165                           postinc0	equ	0xFEE
   166                           wreg	equ	0xFE8
   167                           
   168 ;;
   169 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   170 ;;
   171 ;; *************** function _main *****************
   172 ;; Defined at:
   173 ;;		line 26 in file "main.c"
   174 ;; Parameters:    Size  Location     Type
   175 ;;		None
   176 ;; Auto vars:     Size  Location     Type
   177 ;;  RxData          1   19[COMRAM] unsigned char 
   178 ;; Return value:  Size  Location     Type
   179 ;;		None               void
   180 ;; Registers used:
   181 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   182 ;; Tracked objects:
   183 ;;		On entry : 0/0
   184 ;;		On exit  : 0/0
   185 ;;		Unchanged: 0/0
   186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   187 ;;      Params:         0       0       0       0       0       0       0
   188 ;;      Locals:         1       0       0       0       0       0       0
   189 ;;      Temps:          0       0       0       0       0       0       0
   190 ;;      Totals:         1       0       0       0       0       0       0
   191 ;;Total ram usage:        1 bytes
   192 ;; Hardware stack levels required when called:    4
   193 ;; This function calls:
   194 ;;		_EUSART1_Read
   195 ;;		_SYSTEM_Initialize
   196 ;;		_relayControl
   197 ;; This function is called by:
   198 ;;		Startup code after reset
   199 ;; This function uses a non-reentrant model
   200 ;;
   201                           
   202                           	psect	text0
   203  0003B6                     __ptext0:
   204                           	opt stack 0
   205  0003B6                     _main:
   206                           	opt stack 27
   207                           
   208                           ;main.c: 29: SYSTEM_Initialize();
   209                           
   210                           ;incstack = 0
   211  0003B6  ECE7  F002         	call	_SYSTEM_Initialize	;wreg free
   212                           
   213                           ;main.c: 31: (INTCONbits.GIE = 1);
   214  0003BA  8EF2               	bsf	intcon,7,c	;volatile
   215                           
   216                           ;main.c: 32: (INTCONbits.PEIE = 1);
   217  0003BC  8CF2               	bsf	intcon,6,c	;volatile
   218                           
   219                           ;main.c: 34: char RxData;
   220                           ;main.c: 36: TFNum = '5';
   221  0003BE  0E35               	movlw	53
   222  0003C0  6E3A               	movwf	_TFNum,c
   223                           
   224                           ;main.c: 37: site0_IL[0] = '3';
   225  0003C2  0E33               	movlw	51
   226  0003C4  6E01               	movwf	_site0_IL,c
   227                           
   228                           ;main.c: 38: site0_IL[1] = '.';
   229  0003C6  0E2E               	movlw	46
   230  0003C8  6E02               	movwf	_site0_IL+1,c
   231                           
   232                           ;main.c: 39: site0_IL[2] = '9';
   233  0003CA  0E39               	movlw	57
   234  0003CC  6E03               	movwf	_site0_IL+2,c
   235                           
   236                           ;main.c: 40: site0_IL[3] = '4';
   237  0003CE  0E34               	movlw	52
   238  0003D0  6E04               	movwf	_site0_IL+3,c
   239                           
   240                           ;main.c: 42: site0_IL[4] = '3';
   241  0003D2  0E33               	movlw	51
   242  0003D4  6E05               	movwf	_site0_IL+4,c
   243                           
   244                           ;main.c: 43: site0_IL[5] = '7';
   245  0003D6  0E37               	movlw	55
   246  0003D8  6E06               	movwf	_site0_IL+5,c
   247                           
   248                           ;main.c: 44: site0_IL[6] = '.';
   249  0003DA  0E2E               	movlw	46
   250  0003DC  6E07               	movwf	_site0_IL+6,c
   251                           
   252                           ;main.c: 45: site0_IL[7] = '9';
   253  0003DE  0E39               	movlw	57
   254  0003E0  6E08               	movwf	_site0_IL+7,c
   255                           
   256                           ;main.c: 47: site0_IL[8] = '1';
   257  0003E2  0E31               	movlw	49
   258  0003E4  6E09               	movwf	_site0_IL+8,c
   259                           
   260                           ;main.c: 48: site0_IL[9] = '5';
   261  0003E6  0E35               	movlw	53
   262  0003E8  6E0A               	movwf	_site0_IL+9,c
   263                           
   264                           ;main.c: 49: site0_IL[10] = '.';
   265  0003EA  0E2E               	movlw	46
   266  0003EC  6E0B               	movwf	_site0_IL+10,c
   267                           
   268                           ;main.c: 50: site0_IL[11] = '4';
   269  0003EE  0E34               	movlw	52
   270  0003F0  6E0C               	movwf	_site0_IL+11,c
   271                           
   272                           ;main.c: 52: site0_IL[12] = '5';
   273  0003F2  0E35               	movlw	53
   274  0003F4  6E0D               	movwf	_site0_IL+12,c
   275                           
   276                           ;main.c: 53: site0_IL[13] = '.';
   277  0003F6  0E2E               	movlw	46
   278  0003F8  6E0E               	movwf	_site0_IL+13,c
   279                           
   280                           ;main.c: 54: site0_IL[14] = '8';
   281  0003FA  0E38               	movlw	56
   282  0003FC  6E0F               	movwf	_site0_IL+14,c
   283                           
   284                           ;main.c: 55: site0_IL[15] = '7';
   285  0003FE  0E37               	movlw	55
   286  000400  6E10               	movwf	_site0_IL+15,c
   287  000402  D000               	goto	l1227
   288  000404                     l1227:
   289  000404  9089               	bcf	3977,0,c	;volatile
   290  000406  D000               	goto	l1229
   291  000408                     l1229:
   292  000408  9289               	bcf	3977,1,c	;volatile
   293  00040A  D000               	goto	l1231
   294  00040C                     l1231:
   295  00040C  9489               	bcf	3977,2,c	;volatile
   296  00040E  D000               	goto	l1233
   297  000410                     l1233:
   298  000410  9689               	bcf	3977,3,c	;volatile
   299  000412  D000               	goto	l1235
   300  000414                     l1235:
   301  000414  9889               	bcf	3977,4,c	;volatile
   302  000416  D000               	goto	l1237
   303  000418                     l1237:
   304  000418  9A89               	bcf	3977,5,c	;volatile
   305  00041A  D000               	goto	l1239
   306  00041C                     l1239:
   307  00041C  908D               	bcf	3981,0,c	;volatile
   308  00041E  D000               	goto	l1241
   309  000420                     l1241:
   310  000420  928D               	bcf	3981,1,c	;volatile
   311  000422  D000               	goto	l1243
   312  000424                     l1243:
   313  000424  948D               	bcf	3981,2,c	;volatile
   314  000426  D000               	goto	l1245
   315  000428                     l1245:
   316  000428  9C89               	bcf	3977,6,c	;volatile
   317  00042A  D000               	goto	l1247
   318  00042C                     l1247:
   319  00042C  908B               	bcf	3979,0,c	;volatile
   320  00042E  D000               	goto	l1249
   321  000430                     l1249:
   322  000430  928B               	bcf	3979,1,c	;volatile
   323  000432  D000               	goto	l1251
   324  000434                     l1251:
   325  000434  948B               	bcf	3979,2,c	;volatile
   326  000436  D000               	goto	l1253
   327  000438                     l1253:
   328  000438  908C               	bcf	3980,0,c	;volatile
   329  00043A  D000               	goto	l1255
   330  00043C                     l1255:
   331  00043C  928C               	bcf	3980,1,c	;volatile
   332                           
   333                           ;main.c: 75: {
   334                           ;main.c: 84: while((eusart1RxCount)){
   335                           
   336                           ;main.c: 74: while (1)
   337  00043E  D007               	goto	l1259
   338  000440                     l1257:
   339                           
   340                           ;main.c: 86: RxData = EUSART1_Read();
   341  000440  EC74  F002         	call	_EUSART1_Read	;wreg free
   342  000444  6E39               	movwf	main@RxData,c
   343                           
   344                           ;main.c: 103: relayControl(RxData);
   345  000446  5039               	movf	main@RxData,w,c
   346  000448  EC4F  F000         	call	_relayControl
   347  00044C  D000               	goto	l1259
   348  00044E                     l1259:
   349  00044E  5021               	movf	_eusart1RxCount,w,c	;volatile
   350  000450  B4D8               	btfsc	status,2,c
   351  000452  D7FD               	goto	l1259
   352  000454  D7F5               	goto	l1257
   353                           
   354                           ;main.c: 104: };
   355  000456  D7FB               	goto	l1259
   356  000458  EF4D  F000         	goto	start
   357  00045C                     __end_of_main:
   358                           	opt stack 0
   359                           tblptru	equ	0xFF8
   360                           intcon	equ	0xFF2
   361                           postinc0	equ	0xFEE
   362                           wreg	equ	0xFE8
   363                           status	equ	0xFD8
   364                           
   365 ;; *************** function _relayControl *****************
   366 ;; Defined at:
   367 ;;		line 120 in file "main.c"
   368 ;; Parameters:    Size  Location     Type
   369 ;;  data            1    wreg     unsigned char 
   370 ;; Auto vars:     Size  Location     Type
   371 ;;  data            1   16[COMRAM] unsigned char 
   372 ;;  count           2   17[COMRAM] int 
   373 ;; Return value:  Size  Location     Type
   374 ;;		None               void
   375 ;; Registers used:
   376 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   377 ;; Tracked objects:
   378 ;;		On entry : 0/0
   379 ;;		On exit  : 0/0
   380 ;;		Unchanged: 0/0
   381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   382 ;;      Params:         0       0       0       0       0       0       0
   383 ;;      Locals:         3       0       0       0       0       0       0
   384 ;;      Temps:          1       0       0       0       0       0       0
   385 ;;      Totals:         4       0       0       0       0       0       0
   386 ;;Total ram usage:        4 bytes
   387 ;; Hardware stack levels used:    1
   388 ;; Hardware stack levels required when called:    3
   389 ;; This function calls:
   390 ;;		_EUSART1_Write
   391 ;; This function is called by:
   392 ;;		_main
   393 ;; This function uses a non-reentrant model
   394 ;;
   395                           
   396                           	psect	text1
   397  00009E                     __ptext1:
   398                           	opt stack 0
   399  00009E                     _relayControl:
   400                           	opt stack 27
   401                           
   402                           ;incstack = 0
   403                           ;relayControl@data stored from wreg
   404  00009E  6E36               	movwf	relayControl@data,c
   405                           
   406                           ;main.c: 121: switch (data){
   407  0000A0  D0E5               	goto	l1165
   408  0000A2                     l1145:
   409                           
   410                           ;main.c: 123: EUSART1_Write(TFNum);
   411  0000A2  503A               	movf	_TFNum,w,c
   412  0000A4  EC54  F002         	call	_EUSART1_Write
   413                           
   414                           ;main.c: 124: break;
   415  0000A8  0012               	return	
   416  0000AA                     l1147:
   417                           
   418                           ;main.c: 126: for (int count=0; count<16; count++){
   419  0000AA  0E00               	movlw	0
   420  0000AC  6E38               	movwf	relayControl@count+1,c
   421  0000AE  0E00               	movlw	0
   422  0000B0  6E37               	movwf	relayControl@count,c
   423  0000B2  BE38               	btfsc	relayControl@count+1,7,c
   424  0000B4  D008               	goto	l1153
   425  0000B6  5038               	movf	relayControl@count+1,w,c
   426  0000B8  E105               	bnz	u100
   427  0000BA  0E10               	movlw	16
   428  0000BC  5C37               	subwf	relayControl@count,w,c
   429  0000BE  B0D8               	btfsc	status,0,c
   430  0000C0  0012               	return	
   431  0000C2  D001               	goto	l1153
   432  0000C4                     u100:
   433  0000C4  0012               	return	
   434  0000C6                     l1153:
   435                           
   436                           ;main.c: 127: EUSART1_Write(site0_IL[count]);
   437  0000C6  0E01               	movlw	low _site0_IL
   438  0000C8  2437               	addwf	relayControl@count,w,c
   439  0000CA  6ED9               	movwf	fsr2l,c
   440  0000CC  0E00               	movlw	high _site0_IL
   441  0000CE  2038               	addwfc	relayControl@count+1,w,c
   442  0000D0  6EDA               	movwf	fsr2h,c
   443  0000D2  50DF               	movf	indf2,w,c
   444  0000D4  EC54  F002         	call	_EUSART1_Write
   445                           
   446                           ;main.c: 128: _delay((unsigned long)((25)*(8000000/4000.0)));
   447  0000D8  0E41               	movlw	65
   448  0000DA  6E35               	movwf	??_relayControl& (0+255),c
   449  0000DC  0EEE               	movlw	238
   450  0000DE                     u207:
   451  0000DE  2EE8               	decfsz	wreg,f,c
   452  0000E0  D7FE               	goto	u207
   453  0000E2  2E35               	decfsz	??_relayControl& (0+255),f,c
   454  0000E4  D7FC               	goto	u207
   455  0000E6  D000               	nop2	
   456  0000E8  4A37               	infsnz	relayControl@count,f,c
   457  0000EA  2A38               	incf	relayControl@count+1,f,c
   458  0000EC  BE38               	btfsc	relayControl@count+1,7,c
   459  0000EE  D7EB               	goto	l1153
   460  0000F0  5038               	movf	relayControl@count+1,w,c
   461  0000F2  E101               	bnz	u110
   462  0000F4  D7E2               	goto	L1
   463  0000F6                     u110:
   464                           
   465                           ;main.c: 129: }
   466                           ;main.c: 130: break;
   467  0000F6  0012               	return	
   468  0000F8                     l237:
   469  0000F8  908C               	bcf	3980,0,c	;volatile
   470                           
   471                           ;main.c: 133: break;
   472  0000FA  0012               	return	
   473  0000FC                     l240:
   474  0000FC  808C               	bsf	3980,0,c	;volatile
   475                           
   476                           ;main.c: 136: break;
   477  0000FE  0012               	return	
   478  000100                     l243:
   479  000100  9089               	bcf	3977,0,c	;volatile
   480  000102  D000               	goto	l245
   481  000104                     l245:
   482  000104  9289               	bcf	3977,1,c	;volatile
   483  000106  D000               	goto	l247
   484  000108                     l247:
   485  000108  9489               	bcf	3977,2,c	;volatile
   486  00010A  D000               	goto	l249
   487  00010C                     l249:
   488  00010C  9689               	bcf	3977,3,c	;volatile
   489  00010E  D000               	goto	l251
   490  000110                     l251:
   491  000110  9889               	bcf	3977,4,c	;volatile
   492  000112  D000               	goto	l253
   493  000114                     l253:
   494  000114  9A89               	bcf	3977,5,c	;volatile
   495  000116  D000               	goto	l255
   496  000118                     l255:
   497  000118  908D               	bcf	3981,0,c	;volatile
   498  00011A  D000               	goto	l257
   499  00011C                     l257:
   500  00011C  928D               	bcf	3981,1,c	;volatile
   501  00011E  D000               	goto	l259
   502  000120                     l259:
   503  000120  948D               	bcf	3981,2,c	;volatile
   504  000122  D000               	goto	l261
   505  000124                     l261:
   506  000124  9C89               	bcf	3977,6,c	;volatile
   507  000126  D000               	goto	l263
   508  000128                     l263:
   509  000128  908B               	bcf	3979,0,c	;volatile
   510  00012A  D000               	goto	l265
   511  00012C                     l265:
   512  00012C  928B               	bcf	3979,1,c	;volatile
   513  00012E  D000               	goto	l267
   514  000130                     l267:
   515  000130  948B               	bcf	3979,2,c	;volatile
   516  000132  D000               	goto	l269
   517  000134                     l269:
   518  000134  908C               	bcf	3980,0,c	;volatile
   519  000136  D000               	goto	l271
   520  000138                     l271:
   521  000138  928C               	bcf	3980,1,c	;volatile
   522  00013A  D000               	goto	l273
   523  00013C                     l273:
   524  00013C  9E8A               	bcf	3978,7,c	;volatile
   525  00013E  D000               	goto	l275
   526  000140                     l275:
   527  000140  9C8A               	bcf	3978,6,c	;volatile
   528  000142  D000               	goto	l277
   529  000144                     l277:
   530  000144  9A8A               	bcf	3978,5,c	;volatile
   531  000146  D000               	goto	l279
   532  000148                     l279:
   533  000148  988A               	bcf	3978,4,c	;volatile
   534  00014A  D000               	goto	l281
   535  00014C                     l281:
   536  00014C  968A               	bcf	3978,3,c	;volatile
   537  00014E  D000               	goto	l283
   538  000150                     l283:
   539  000150  948A               	bcf	3978,2,c	;volatile
   540  000152  D000               	goto	l285
   541  000154                     l285:
   542  000154  928A               	bcf	3978,1,c	;volatile
   543  000156  D000               	goto	l287
   544  000158                     l287:
   545  000158  908A               	bcf	3978,0,c	;volatile
   546  00015A  D000               	goto	l289
   547  00015C                     l289:
   548  00015C  9E8C               	bcf	3980,7,c	;volatile
   549                           
   550                           ;main.c: 166: break;
   551  00015E  0012               	return	
   552  000160                     l292:
   553  000160  9089               	bcf	3977,0,c	;volatile
   554                           
   555                           ;main.c: 169: break;
   556  000162  0012               	return	
   557  000164                     l295:
   558  000164  8089               	bsf	3977,0,c	;volatile
   559                           
   560                           ;main.c: 172: break;
   561  000166  0012               	return	
   562  000168                     l298:
   563  000168  9289               	bcf	3977,1,c	;volatile
   564                           
   565                           ;main.c: 177: break;
   566  00016A  0012               	return	
   567  00016C                     l301:
   568  00016C  8289               	bsf	3977,1,c	;volatile
   569                           
   570                           ;main.c: 180: break;
   571  00016E  0012               	return	
   572  000170                     l304:
   573  000170  9489               	bcf	3977,2,c	;volatile
   574                           
   575                           ;main.c: 185: break;
   576  000172  0012               	return	
   577  000174                     l307:
   578  000174  8489               	bsf	3977,2,c	;volatile
   579                           
   580                           ;main.c: 188: break;
   581  000176  0012               	return	
   582  000178                     l310:
   583  000178  9689               	bcf	3977,3,c	;volatile
   584                           
   585                           ;main.c: 191: break;
   586  00017A  0012               	return	
   587  00017C                     l313:
   588  00017C  8689               	bsf	3977,3,c	;volatile
   589                           
   590                           ;main.c: 194: break;
   591  00017E  0012               	return	
   592  000180                     l316:
   593  000180  9889               	bcf	3977,4,c	;volatile
   594                           
   595                           ;main.c: 197: break;
   596  000182  0012               	return	
   597  000184                     l319:
   598  000184  8889               	bsf	3977,4,c	;volatile
   599                           
   600                           ;main.c: 200: break;
   601  000186  0012               	return	
   602  000188                     l322:
   603  000188  9A89               	bcf	3977,5,c	;volatile
   604                           
   605                           ;main.c: 203: break;
   606  00018A  0012               	return	
   607  00018C                     l325:
   608  00018C  8A89               	bsf	3977,5,c	;volatile
   609                           
   610                           ;main.c: 206: break;
   611  00018E  0012               	return	
   612  000190                     l328:
   613  000190  908D               	bcf	3981,0,c	;volatile
   614                           
   615                           ;main.c: 210: break;
   616  000192  0012               	return	
   617  000194                     l331:
   618  000194  808D               	bsf	3981,0,c	;volatile
   619                           
   620                           ;main.c: 213: break;
   621  000196  0012               	return	
   622  000198                     l334:
   623  000198  928D               	bcf	3981,1,c	;volatile
   624                           
   625                           ;main.c: 216: break;
   626  00019A  0012               	return	
   627  00019C                     l337:
   628  00019C  828D               	bsf	3981,1,c	;volatile
   629                           
   630                           ;main.c: 219: break;
   631  00019E  0012               	return	
   632  0001A0                     l340:
   633  0001A0  948D               	bcf	3981,2,c	;volatile
   634                           
   635                           ;main.c: 222: break;
   636  0001A2  0012               	return	
   637  0001A4                     l343:
   638  0001A4  848D               	bsf	3981,2,c	;volatile
   639                           
   640                           ;main.c: 225: break;
   641  0001A6  0012               	return	
   642  0001A8                     l346:
   643  0001A8  9C89               	bcf	3977,6,c	;volatile
   644                           
   645                           ;main.c: 228: break;
   646  0001AA  0012               	return	
   647  0001AC                     l349:
   648  0001AC  8C89               	bsf	3977,6,c	;volatile
   649                           
   650                           ;main.c: 231: break;
   651  0001AE  0012               	return	
   652  0001B0                     l352:
   653  0001B0  908B               	bcf	3979,0,c	;volatile
   654                           
   655                           ;main.c: 234: break;
   656  0001B2  0012               	return	
   657  0001B4                     l355:
   658  0001B4  808B               	bsf	3979,0,c	;volatile
   659                           
   660                           ;main.c: 237: break;
   661  0001B6  0012               	return	
   662  0001B8                     l358:
   663  0001B8  928B               	bcf	3979,1,c	;volatile
   664                           
   665                           ;main.c: 240: break;
   666  0001BA  0012               	return	
   667  0001BC                     l361:
   668  0001BC  828B               	bsf	3979,1,c	;volatile
   669                           
   670                           ;main.c: 243: break;
   671  0001BE  0012               	return	
   672  0001C0                     l364:
   673  0001C0  948B               	bcf	3979,2,c	;volatile
   674                           
   675                           ;main.c: 246: break;
   676  0001C2  0012               	return	
   677  0001C4                     l367:
   678  0001C4  848B               	bsf	3979,2,c	;volatile
   679                           
   680                           ;main.c: 249: break;
   681  0001C6  0012               	return	
   682  0001C8                     l370:
   683  0001C8  908C               	bcf	3980,0,c	;volatile
   684                           
   685                           ;main.c: 252: break;
   686  0001CA  0012               	return	
   687  0001CC                     l373:
   688  0001CC  808C               	bsf	3980,0,c	;volatile
   689                           
   690                           ;main.c: 255: break;
   691  0001CE  0012               	return	
   692  0001D0                     l376:
   693  0001D0  9E8A               	bcf	3978,7,c	;volatile
   694                           
   695                           ;main.c: 258: break;
   696  0001D2  0012               	return	
   697  0001D4                     l379:
   698  0001D4  8E8A               	bsf	3978,7,c	;volatile
   699                           
   700                           ;main.c: 261: break;
   701  0001D6  0012               	return	
   702  0001D8                     l382:
   703  0001D8  9089               	bcf	3977,0,c	;volatile
   704  0001DA  D000               	goto	l384
   705  0001DC                     l384:
   706  0001DC  9289               	bcf	3977,1,c	;volatile
   707  0001DE  D000               	goto	l386
   708  0001E0                     l386:
   709  0001E0  9489               	bcf	3977,2,c	;volatile
   710  0001E2  D000               	goto	l388
   711  0001E4                     l388:
   712  0001E4  9689               	bcf	3977,3,c	;volatile
   713  0001E6  D000               	goto	l390
   714  0001E8                     l390:
   715  0001E8  9889               	bcf	3977,4,c	;volatile
   716  0001EA  D000               	goto	l392
   717  0001EC                     l392:
   718  0001EC  9A89               	bcf	3977,5,c	;volatile
   719  0001EE  D000               	goto	l394
   720  0001F0                     l394:
   721  0001F0  908D               	bcf	3981,0,c	;volatile
   722  0001F2  D000               	goto	l396
   723  0001F4                     l396:
   724  0001F4  928D               	bcf	3981,1,c	;volatile
   725  0001F6  D000               	goto	l398
   726  0001F8                     l398:
   727  0001F8  948D               	bcf	3981,2,c	;volatile
   728  0001FA  D000               	goto	l400
   729  0001FC                     l400:
   730  0001FC  9C89               	bcf	3977,6,c	;volatile
   731  0001FE  D000               	goto	l402
   732  000200                     l402:
   733  000200  908B               	bcf	3979,0,c	;volatile
   734  000202  D000               	goto	l404
   735  000204                     l404:
   736  000204  928B               	bcf	3979,1,c	;volatile
   737  000206  D000               	goto	l406
   738  000208                     l406:
   739  000208  948B               	bcf	3979,2,c	;volatile
   740  00020A  D000               	goto	l408
   741  00020C                     l408:
   742  00020C  908C               	bcf	3980,0,c	;volatile
   743  00020E  D000               	goto	l410
   744  000210                     l410:
   745  000210  928C               	bcf	3980,1,c	;volatile
   746  000212  D000               	goto	l412
   747  000214                     l412:
   748  000214  9C8A               	bcf	3978,6,c	;volatile
   749  000216  D000               	goto	l414
   750  000218                     l414:
   751  000218  9E8A               	bcf	3978,7,c	;volatile
   752                           
   753                           ;main.c: 280: break;
   754  00021A  0012               	return	
   755  00021C                     l417:
   756  00021C  9C8A               	bcf	3978,6,c	;volatile
   757                           
   758                           ;main.c: 286: break;
   759  00021E  0012               	return	
   760  000220                     l420:
   761  000220  8C8A               	bsf	3978,6,c	;volatile
   762                           
   763                           ;main.c: 289: break;
   764  000222  0012               	return	
   765  000224                     l423:
   766  000224  9E8A               	bcf	3978,7,c	;volatile
   767                           
   768                           ;main.c: 292: break;
   769  000226  0012               	return	
   770  000228                     l426:
   771  000228  8E8A               	bsf	3978,7,c	;volatile
   772                           
   773                           ;main.c: 295: break;
   774  00022A  0012               	return	
   775  00022C                     l429:
   776  00022C  9A8A               	bcf	3978,5,c	;volatile
   777                           
   778                           ;main.c: 298: break;
   779  00022E  0012               	return	
   780  000230                     l432:
   781  000230  8A8A               	bsf	3978,5,c	;volatile
   782                           
   783                           ;main.c: 301: break;
   784  000232  0012               	return	
   785  000234                     l435:
   786  000234  988A               	bcf	3978,4,c	;volatile
   787                           
   788                           ;main.c: 304: break;
   789  000236  0012               	return	
   790  000238                     l438:
   791  000238  888A               	bsf	3978,4,c	;volatile
   792                           
   793                           ;main.c: 307: break;
   794  00023A  0012               	return	
   795  00023C                     l441:
   796  00023C  968A               	bcf	3978,3,c	;volatile
   797                           
   798                           ;main.c: 310: break;
   799  00023E  0012               	return	
   800  000240                     l444:
   801  000240  868A               	bsf	3978,3,c	;volatile
   802                           
   803                           ;main.c: 313: break;
   804  000242  0012               	return	
   805  000244                     l447:
   806  000244  948A               	bcf	3978,2,c	;volatile
   807                           
   808                           ;main.c: 316: break;
   809  000246  0012               	return	
   810  000248                     l450:
   811  000248  848A               	bsf	3978,2,c	;volatile
   812                           
   813                           ;main.c: 319: break;
   814  00024A  0012               	return	
   815  00024C                     l453:
   816  00024C  928A               	bcf	3978,1,c	;volatile
   817                           
   818                           ;main.c: 322: break;
   819  00024E  0012               	return	
   820  000250                     l456:
   821  000250  828A               	bsf	3978,1,c	;volatile
   822                           
   823                           ;main.c: 325: break;
   824  000252  0012               	return	
   825  000254                     l459:
   826  000254  908A               	bcf	3978,0,c	;volatile
   827                           
   828                           ;main.c: 328: break;
   829  000256  0012               	return	
   830  000258                     l462:
   831  000258  808A               	bsf	3978,0,c	;volatile
   832                           
   833                           ;main.c: 331: break;
   834  00025A  0012               	return	
   835  00025C                     l465:
   836  00025C  9E8C               	bcf	3980,7,c	;volatile
   837                           
   838                           ;main.c: 334: break;
   839  00025E  0012               	return	
   840  000260                     l468:
   841  000260  8E8C               	bsf	3980,7,c	;volatile
   842                           
   843                           ;main.c: 337: break;
   844  000262  0012               	return	
   845  000264                     l1161:
   846                           
   847                           ;main.c: 342: EUSART1_Write('U');
   848  000264  0E55               	movlw	85
   849  000266  EC54  F002         	call	_EUSART1_Write
   850                           
   851                           ;main.c: 344: }
   852                           
   853                           ;main.c: 343: break;
   854  00026A  0012               	return	
   855  00026C                     l1165:
   856  00026C  5036               	movf	relayControl@data,w,c
   857                           
   858                           ; Switch size 1, requested type "space"
   859                           ; Number of cases is 54, Range of values is 2 to 120
   860                           ; switch strategies available:
   861                           ; Name         Instructions Cycles
   862                           ; simple_byte          163    82 (average)
   863                           ;	Chosen strategy is simple_byte
   864  00026E  0A02               	xorlw	2	; case 2
   865  000270  B4D8               	btfsc	status,2,c
   866  000272  D776               	goto	l292
   867  000274  0A01               	xorlw	1	; case 3
   868  000276  B4D8               	btfsc	status,2,c
   869  000278  D7D5               	goto	l423
   870  00027A  0A07               	xorlw	7	; case 4
   871  00027C  B4D8               	btfsc	status,2,c
   872  00027E  D774               	goto	l298
   873  000280  0A01               	xorlw	1	; case 5
   874  000282  B4D8               	btfsc	status,2,c
   875  000284  D7CB               	goto	l417
   876  000286  0A03               	xorlw	3	; case 6
   877  000288  B4D8               	btfsc	status,2,c
   878  00028A  D772               	goto	l304
   879  00028C  0A01               	xorlw	1	; case 7
   880  00028E  B4D8               	btfsc	status,2,c
   881  000290  D7CD               	goto	l429
   882  000292  0A0F               	xorlw	15	; case 8
   883  000294  B4D8               	btfsc	status,2,c
   884  000296  D770               	goto	l310
   885  000298  0A01               	xorlw	1	; case 9
   886  00029A  B4D8               	btfsc	status,2,c
   887  00029C  D7CB               	goto	l435
   888  00029E  0A03               	xorlw	3	; case 10
   889  0002A0  B4D8               	btfsc	status,2,c
   890  0002A2  D76E               	goto	l316
   891  0002A4  0A01               	xorlw	1	; case 11
   892  0002A6  B4D8               	btfsc	status,2,c
   893  0002A8  D7C9               	goto	l441
   894  0002AA  0A07               	xorlw	7	; case 12
   895  0002AC  B4D8               	btfsc	status,2,c
   896  0002AE  D76C               	goto	l322
   897  0002B0  0A01               	xorlw	1	; case 13
   898  0002B2  B4D8               	btfsc	status,2,c
   899  0002B4  D7C7               	goto	l447
   900  0002B6  0A03               	xorlw	3	; case 14
   901  0002B8  B4D8               	btfsc	status,2,c
   902  0002BA  D76A               	goto	l328
   903  0002BC  0A01               	xorlw	1	; case 15
   904  0002BE  B4D8               	btfsc	status,2,c
   905  0002C0  D7C5               	goto	l453
   906  0002C2  0A1F               	xorlw	31	; case 16
   907  0002C4  B4D8               	btfsc	status,2,c
   908  0002C6  D768               	goto	l334
   909  0002C8  0A01               	xorlw	1	; case 17
   910  0002CA  B4D8               	btfsc	status,2,c
   911  0002CC  D7C3               	goto	l459
   912  0002CE  0A03               	xorlw	3	; case 18
   913  0002D0  B4D8               	btfsc	status,2,c
   914  0002D2  D766               	goto	l340
   915  0002D4  0A01               	xorlw	1	; case 19
   916  0002D6  B4D8               	btfsc	status,2,c
   917  0002D8  D7C1               	goto	l465
   918  0002DA  0A07               	xorlw	7	; case 20
   919  0002DC  B4D8               	btfsc	status,2,c
   920  0002DE  D764               	goto	l346
   921  0002E0  0A02               	xorlw	2	; case 22
   922  0002E2  B4D8               	btfsc	status,2,c
   923  0002E4  D765               	goto	l352
   924  0002E6  0A0E               	xorlw	14	; case 24
   925  0002E8  B4D8               	btfsc	status,2,c
   926  0002EA  D766               	goto	l358
   927  0002EC  0A02               	xorlw	2	; case 26
   928  0002EE  B4D8               	btfsc	status,2,c
   929  0002F0  D767               	goto	l364
   930  0002F2  0A06               	xorlw	6	; case 28
   931  0002F4  B4D8               	btfsc	status,2,c
   932  0002F6  D768               	goto	l370
   933  0002F8  0A02               	xorlw	2	; case 30
   934  0002FA  B4D8               	btfsc	status,2,c
   935  0002FC  D769               	goto	l376
   936  0002FE  0A3C               	xorlw	60	; case 34
   937  000300  B4D8               	btfsc	status,2,c
   938  000302  D730               	goto	l295
   939  000304  0A01               	xorlw	1	; case 35
   940  000306  B4D8               	btfsc	status,2,c
   941  000308  D78F               	goto	l426
   942  00030A  0A07               	xorlw	7	; case 36
   943  00030C  B4D8               	btfsc	status,2,c
   944  00030E  D72E               	goto	l301
   945  000310  0A01               	xorlw	1	; case 37
   946  000312  B4D8               	btfsc	status,2,c
   947  000314  D785               	goto	l420
   948  000316  0A03               	xorlw	3	; case 38
   949  000318  B4D8               	btfsc	status,2,c
   950  00031A  D72C               	goto	l307
   951  00031C  0A01               	xorlw	1	; case 39
   952  00031E  B4D8               	btfsc	status,2,c
   953  000320  D787               	goto	l432
   954  000322  0A0F               	xorlw	15	; case 40
   955  000324  B4D8               	btfsc	status,2,c
   956  000326  D72A               	goto	l313
   957  000328  0A01               	xorlw	1	; case 41
   958  00032A  B4D8               	btfsc	status,2,c
   959  00032C  D785               	goto	l438
   960  00032E  0A03               	xorlw	3	; case 42
   961  000330  B4D8               	btfsc	status,2,c
   962  000332  D728               	goto	l319
   963  000334  0A01               	xorlw	1	; case 43
   964  000336  B4D8               	btfsc	status,2,c
   965  000338  D783               	goto	l444
   966  00033A  0A07               	xorlw	7	; case 44
   967  00033C  B4D8               	btfsc	status,2,c
   968  00033E  D726               	goto	l325
   969  000340  0A01               	xorlw	1	; case 45
   970  000342  B4D8               	btfsc	status,2,c
   971  000344  D781               	goto	l450
   972  000346  0A03               	xorlw	3	; case 46
   973  000348  B4D8               	btfsc	status,2,c
   974  00034A  D724               	goto	l331
   975  00034C  0A01               	xorlw	1	; case 47
   976  00034E  B4D8               	btfsc	status,2,c
   977  000350  D77F               	goto	l456
   978  000352  0A1F               	xorlw	31	; case 48
   979  000354  B4D8               	btfsc	status,2,c
   980  000356  D722               	goto	l337
   981  000358  0A01               	xorlw	1	; case 49
   982  00035A  B4D8               	btfsc	status,2,c
   983  00035C  D77D               	goto	l462
   984  00035E  0A03               	xorlw	3	; case 50
   985  000360  B4D8               	btfsc	status,2,c
   986  000362  D720               	goto	l343
   987  000364  0A01               	xorlw	1	; case 51
   988  000366  B4D8               	btfsc	status,2,c
   989  000368  D77B               	goto	l468
   990  00036A  0A07               	xorlw	7	; case 52
   991  00036C  B4D8               	btfsc	status,2,c
   992  00036E  D71E               	goto	l349
   993  000370  0A02               	xorlw	2	; case 54
   994  000372  B4D8               	btfsc	status,2,c
   995  000374  D71F               	goto	l355
   996  000376  0A0E               	xorlw	14	; case 56
   997  000378  B4D8               	btfsc	status,2,c
   998  00037A  D720               	goto	l361
   999  00037C  0A02               	xorlw	2	; case 58
  1000  00037E  B4D8               	btfsc	status,2,c
  1001  000380  D721               	goto	l367
  1002  000382  0A06               	xorlw	6	; case 60
  1003  000384  B4D8               	btfsc	status,2,c
  1004  000386  D722               	goto	l373
  1005  000388  0A02               	xorlw	2	; case 62
  1006  00038A  B4D8               	btfsc	status,2,c
  1007  00038C  D723               	goto	l379
  1008  00038E  0A77               	xorlw	119	; case 73
  1009  000390  B4D8               	btfsc	status,2,c
  1010  000392  D68B               	goto	l1147
  1011  000394  0A1D               	xorlw	29	; case 84
  1012  000396  B4D8               	btfsc	status,2,c
  1013  000398  D684               	goto	l1145
  1014  00039A  0A0C               	xorlw	12	; case 88
  1015  00039C  B4D8               	btfsc	status,2,c
  1016  00039E  D6B0               	goto	l243
  1017  0003A0  0A39               	xorlw	57	; case 97
  1018  0003A2  B4D8               	btfsc	status,2,c
  1019  0003A4  D6A9               	goto	l237
  1020  0003A6  0A03               	xorlw	3	; case 98
  1021  0003A8  B4D8               	btfsc	status,2,c
  1022  0003AA  D6A8               	goto	l240
  1023  0003AC  0A1A               	xorlw	26	; case 120
  1024  0003AE  B4D8               	btfsc	status,2,c
  1025  0003B0  D713               	goto	l382
  1026  0003B2  D758               	goto	l1161
  1027  0003B4  0012               	return		;funcret
  1028  0003B6                     __end_of_relayControl:
  1029                           	opt stack 0
  1030                           tblptru	equ	0xFF8
  1031                           intcon	equ	0xFF2
  1032                           postinc0	equ	0xFEE
  1033                           wreg	equ	0xFE8
  1034                           indf2	equ	0xFDF
  1035                           fsr2h	equ	0xFDA
  1036                           fsr2l	equ	0xFD9
  1037                           status	equ	0xFD8
  1038                           
  1039 ;; *************** function _EUSART1_Write *****************
  1040 ;; Defined at:
  1041 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  1042 ;; Parameters:    Size  Location     Type
  1043 ;;  txData          1    wreg     unsigned char 
  1044 ;; Auto vars:     Size  Location     Type
  1045 ;;  txData          1   14[COMRAM] unsigned char 
  1046 ;; Return value:  Size  Location     Type
  1047 ;;		None               void
  1048 ;; Registers used:
  1049 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1050 ;; Tracked objects:
  1051 ;;		On entry : 0/0
  1052 ;;		On exit  : 0/0
  1053 ;;		Unchanged: 0/0
  1054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1055 ;;      Params:         0       0       0       0       0       0       0
  1056 ;;      Locals:         1       0       0       0       0       0       0
  1057 ;;      Temps:          0       0       0       0       0       0       0
  1058 ;;      Totals:         1       0       0       0       0       0       0
  1059 ;;Total ram usage:        1 bytes
  1060 ;; Hardware stack levels used:    1
  1061 ;; Hardware stack levels required when called:    2
  1062 ;; This function calls:
  1063 ;;		Nothing
  1064 ;; This function is called by:
  1065 ;;		_relayControl
  1066 ;;		_putch
  1067 ;;		_sendString
  1068 ;; This function uses a non-reentrant model
  1069 ;;
  1070                           
  1071                           	psect	text2
  1072  0004A8                     __ptext2:
  1073                           	opt stack 0
  1074  0004A8                     _EUSART1_Write:
  1075                           	opt stack 27
  1076                           
  1077                           ;incstack = 0
  1078                           ;EUSART1_Write@txData stored from wreg
  1079  0004A8  6E34               	movwf	EUSART1_Write@txData,c
  1080                           
  1081                           ;eusart1.c: 134: while(0 == eusart1TxBufferRemaining)
  1082  0004AA  D000               	goto	l1071
  1083  0004AC                     l1071:
  1084  0004AC  503B               	movf	_eusart1TxBufferRemaining,w,c	;volatile
  1085  0004AE  B4D8               	btfsc	status,2,c
  1086  0004B0  D7FD               	goto	l1071
  1087                           
  1088                           ;eusart1.c: 136: }
  1089                           ;eusart1.c: 138: if(0 == PIE1bits.TX1IE)
  1090  0004B2  B89D               	btfsc	3997,4,c	;volatile
  1091  0004B4  D003               	goto	l70
  1092                           
  1093                           ;eusart1.c: 139: {
  1094                           ;eusart1.c: 140: TXREG1 = txData;
  1095  0004B6  C034  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  1096                           
  1097                           ;eusart1.c: 141: }
  1098  0004BA  D014               	goto	l1085
  1099  0004BC                     l70:
  1100                           
  1101                           ;eusart1.c: 142: else
  1102                           ;eusart1.c: 143: {
  1103                           ;eusart1.c: 144: PIE1bits.TX1IE = 0;
  1104  0004BC  989D               	bcf	3997,4,c	;volatile
  1105                           
  1106                           ;eusart1.c: 145: eusart1TxBuffer[eusart1TxHead++] = txData;
  1107  0004BE  5024               	movf	_eusart1TxHead,w,c
  1108  0004C0  0D01               	mullw	1
  1109  0004C2  0E19               	movlw	low _eusart1TxBuffer
  1110  0004C4  24F3               	addwf	prodl,w,c
  1111  0004C6  6ED9               	movwf	fsr2l,c
  1112  0004C8  0E00               	movlw	high _eusart1TxBuffer
  1113  0004CA  20F4               	addwfc	prodh,w,c
  1114  0004CC  6EDA               	movwf	fsr2h,c
  1115  0004CE  C034  FFDF         	movff	EUSART1_Write@txData,indf2
  1116  0004D2  2A24               	incf	_eusart1TxHead,f,c
  1117                           
  1118                           ;eusart1.c: 146: if(sizeof(eusart1TxBuffer) <= eusart1TxHead)
  1119  0004D4  0E07               	movlw	7
  1120  0004D6  6424               	cpfsgt	_eusart1TxHead,c
  1121  0004D8  D003               	goto	l1083
  1122                           
  1123                           ;eusart1.c: 147: {
  1124                           ;eusart1.c: 148: eusart1TxHead = 0;
  1125  0004DA  0E00               	movlw	0
  1126  0004DC  6E24               	movwf	_eusart1TxHead,c
  1127  0004DE  D000               	goto	l1083
  1128  0004E0                     l1083:
  1129                           
  1130                           ;eusart1.c: 149: }
  1131                           ;eusart1.c: 150: eusart1TxBufferRemaining--;
  1132  0004E0  063B               	decf	_eusart1TxBufferRemaining,f,c	;volatile
  1133  0004E2  D000               	goto	l1085
  1134  0004E4                     l1085:
  1135                           
  1136                           ;eusart1.c: 151: }
  1137                           ;eusart1.c: 152: PIE1bits.TX1IE = 1;
  1138  0004E4  889D               	bsf	3997,4,c	;volatile
  1139  0004E6  0012               	return		;funcret
  1140  0004E8                     __end_of_EUSART1_Write:
  1141                           	opt stack 0
  1142                           tblptru	equ	0xFF8
  1143                           prodh	equ	0xFF4
  1144                           prodl	equ	0xFF3
  1145                           intcon	equ	0xFF2
  1146                           postinc0	equ	0xFEE
  1147                           wreg	equ	0xFE8
  1148                           indf2	equ	0xFDF
  1149                           fsr2h	equ	0xFDA
  1150                           fsr2l	equ	0xFD9
  1151                           status	equ	0xFD8
  1152                           
  1153 ;; *************** function _SYSTEM_Initialize *****************
  1154 ;; Defined at:
  1155 ;;		line 111 in file "mcc_generated_files/mcc.c"
  1156 ;; Parameters:    Size  Location     Type
  1157 ;;		None
  1158 ;; Auto vars:     Size  Location     Type
  1159 ;;		None
  1160 ;; Return value:  Size  Location     Type
  1161 ;;		None               void
  1162 ;; Registers used:
  1163 ;;		wreg, status,2, cstack
  1164 ;; Tracked objects:
  1165 ;;		On entry : 0/0
  1166 ;;		On exit  : 0/0
  1167 ;;		Unchanged: 0/0
  1168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1169 ;;      Params:         0       0       0       0       0       0       0
  1170 ;;      Locals:         0       0       0       0       0       0       0
  1171 ;;      Temps:          0       0       0       0       0       0       0
  1172 ;;      Totals:         0       0       0       0       0       0       0
  1173 ;;Total ram usage:        0 bytes
  1174 ;; Hardware stack levels used:    1
  1175 ;; Hardware stack levels required when called:    3
  1176 ;; This function calls:
  1177 ;;		_EUSART1_Initialize
  1178 ;;		_INTERRUPT_Initialize
  1179 ;;		_OSCILLATOR_Initialize
  1180 ;;		_PIN_MANAGER_Initialize
  1181 ;; This function is called by:
  1182 ;;		_main
  1183 ;; This function uses a non-reentrant model
  1184 ;;
  1185                           
  1186                           	psect	text3
  1187  0005CE                     __ptext3:
  1188                           	opt stack 0
  1189  0005CE                     _SYSTEM_Initialize:
  1190                           	opt stack 27
  1191                           
  1192                           ;mcc.c: 114: INTERRUPT_Initialize();
  1193                           
  1194                           ;incstack = 0
  1195  0005CE  ECF7  F002         	call	_INTERRUPT_Initialize	;wreg free
  1196                           
  1197                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  1198  0005D2  EC2E  F002         	call	_PIN_MANAGER_Initialize	;wreg free
  1199                           
  1200                           ;mcc.c: 116: OSCILLATOR_Initialize();
  1201  0005D6  ECF0  F002         	call	_OSCILLATOR_Initialize	;wreg free
  1202                           
  1203                           ;mcc.c: 117: EUSART1_Initialize();
  1204  0005DA  EC91  F002         	call	_EUSART1_Initialize	;wreg free
  1205  0005DE  0012               	return		;funcret
  1206  0005E0                     __end_of_SYSTEM_Initialize:
  1207                           	opt stack 0
  1208                           tblptru	equ	0xFF8
  1209                           prodh	equ	0xFF4
  1210                           prodl	equ	0xFF3
  1211                           intcon	equ	0xFF2
  1212                           postinc0	equ	0xFEE
  1213                           wreg	equ	0xFE8
  1214                           indf2	equ	0xFDF
  1215                           fsr2h	equ	0xFDA
  1216                           fsr2l	equ	0xFD9
  1217                           status	equ	0xFD8
  1218                           
  1219 ;; *************** function _PIN_MANAGER_Initialize *****************
  1220 ;; Defined at:
  1221 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
  1222 ;; Parameters:    Size  Location     Type
  1223 ;;		None
  1224 ;; Auto vars:     Size  Location     Type
  1225 ;;		None
  1226 ;; Return value:  Size  Location     Type
  1227 ;;		None               void
  1228 ;; Registers used:
  1229 ;;		wreg, status,2
  1230 ;; Tracked objects:
  1231 ;;		On entry : 0/0
  1232 ;;		On exit  : 0/0
  1233 ;;		Unchanged: 0/0
  1234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1235 ;;      Params:         0       0       0       0       0       0       0
  1236 ;;      Locals:         0       0       0       0       0       0       0
  1237 ;;      Temps:          0       0       0       0       0       0       0
  1238 ;;      Totals:         0       0       0       0       0       0       0
  1239 ;;Total ram usage:        0 bytes
  1240 ;; Hardware stack levels used:    1
  1241 ;; Hardware stack levels required when called:    2
  1242 ;; This function calls:
  1243 ;;		Nothing
  1244 ;; This function is called by:
  1245 ;;		_SYSTEM_Initialize
  1246 ;; This function uses a non-reentrant model
  1247 ;;
  1248                           
  1249                           	psect	text4
  1250  00045C                     __ptext4:
  1251                           	opt stack 0
  1252  00045C                     _PIN_MANAGER_Initialize:
  1253                           	opt stack 27
  1254                           
  1255                           ;pin_manager.c: 56: LATE = 0x00;
  1256                           
  1257                           ;incstack = 0
  1258  00045C  0E00               	movlw	0
  1259  00045E  6E8D               	movwf	3981,c	;volatile
  1260                           
  1261                           ;pin_manager.c: 57: LATD = 0x00;
  1262  000460  0E00               	movlw	0
  1263  000462  6E8C               	movwf	3980,c	;volatile
  1264                           
  1265                           ;pin_manager.c: 58: LATA = 0x00;
  1266  000464  0E00               	movlw	0
  1267  000466  6E89               	movwf	3977,c	;volatile
  1268                           
  1269                           ;pin_manager.c: 59: LATB = 0x00;
  1270  000468  0E00               	movlw	0
  1271  00046A  6E8A               	movwf	3978,c	;volatile
  1272                           
  1273                           ;pin_manager.c: 60: LATC = 0x00;
  1274  00046C  0E00               	movlw	0
  1275  00046E  6E8B               	movwf	3979,c	;volatile
  1276                           
  1277                           ;pin_manager.c: 65: TRISE = 0x00;
  1278  000470  0E00               	movlw	0
  1279  000472  6E96               	movwf	3990,c	;volatile
  1280                           
  1281                           ;pin_manager.c: 66: TRISA = 0x00;
  1282  000474  0E00               	movlw	0
  1283  000476  6E92               	movwf	3986,c	;volatile
  1284                           
  1285                           ;pin_manager.c: 67: TRISB = 0x00;
  1286  000478  0E00               	movlw	0
  1287  00047A  6E93               	movwf	3987,c	;volatile
  1288                           
  1289                           ;pin_manager.c: 68: TRISC = 0xB8;
  1290  00047C  0EB8               	movlw	184
  1291  00047E  6E94               	movwf	3988,c	;volatile
  1292                           
  1293                           ;pin_manager.c: 69: TRISD = 0x7C;
  1294  000480  0E7C               	movlw	124
  1295  000482  6E95               	movwf	3989,c	;volatile
  1296                           
  1297                           ;pin_manager.c: 74: ANSELC = 0x38;
  1298  000484  0E38               	movlw	56
  1299  000486  010F               	movlb	15	; () banked
  1300  000488  6F3A               	movwf	58,b	;volatile
  1301                           
  1302                           ;pin_manager.c: 75: ANSELB = 0x3F;
  1303  00048A  0E3F               	movlw	63
  1304  00048C  010F               	movlb	15	; () banked
  1305  00048E  6F39               	movwf	57,b	;volatile
  1306                           
  1307                           ;pin_manager.c: 76: ANSELD = 0x00;
  1308  000490  0E00               	movlw	0
  1309  000492  010F               	movlb	15	; () banked
  1310  000494  6F3B               	movwf	59,b	;volatile
  1311                           
  1312                           ;pin_manager.c: 77: ANSELE = 0x00;
  1313  000496  0E00               	movlw	0
  1314  000498  010F               	movlb	15	; () banked
  1315  00049A  6F3C               	movwf	60,b	;volatile
  1316                           
  1317                           ;pin_manager.c: 78: ANSELA = 0x00;
  1318  00049C  0E00               	movlw	0
  1319  00049E  010F               	movlb	15	; () banked
  1320  0004A0  6F38               	movwf	56,b	;volatile
  1321                           
  1322                           ; BSR set to: 15
  1323                           ;pin_manager.c: 83: WPUB = 0xFF;
  1324  0004A2  6861               	setf	3937,c	;volatile
  1325                           
  1326                           ; BSR set to: 15
  1327                           ;pin_manager.c: 84: INTCON2bits.nRBPU = 0;
  1328  0004A4  9EF1               	bcf	intcon2,7,c	;volatile
  1329                           
  1330                           ; BSR set to: 15
  1331  0004A6  0012               	return		;funcret
  1332  0004A8                     __end_of_PIN_MANAGER_Initialize:
  1333                           	opt stack 0
  1334                           tblptru	equ	0xFF8
  1335                           prodh	equ	0xFF4
  1336                           prodl	equ	0xFF3
  1337                           intcon	equ	0xFF2
  1338                           intcon2	equ	0xFF1
  1339                           postinc0	equ	0xFEE
  1340                           wreg	equ	0xFE8
  1341                           indf2	equ	0xFDF
  1342                           fsr2h	equ	0xFDA
  1343                           fsr2l	equ	0xFD9
  1344                           status	equ	0xFD8
  1345                           
  1346 ;; *************** function _OSCILLATOR_Initialize *****************
  1347 ;; Defined at:
  1348 ;;		line 120 in file "mcc_generated_files/mcc.c"
  1349 ;; Parameters:    Size  Location     Type
  1350 ;;		None
  1351 ;; Auto vars:     Size  Location     Type
  1352 ;;		None
  1353 ;; Return value:  Size  Location     Type
  1354 ;;		None               void
  1355 ;; Registers used:
  1356 ;;		wreg, status,2
  1357 ;; Tracked objects:
  1358 ;;		On entry : 0/0
  1359 ;;		On exit  : 0/0
  1360 ;;		Unchanged: 0/0
  1361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1362 ;;      Params:         0       0       0       0       0       0       0
  1363 ;;      Locals:         0       0       0       0       0       0       0
  1364 ;;      Temps:          0       0       0       0       0       0       0
  1365 ;;      Totals:         0       0       0       0       0       0       0
  1366 ;;Total ram usage:        0 bytes
  1367 ;; Hardware stack levels used:    1
  1368 ;; Hardware stack levels required when called:    2
  1369 ;; This function calls:
  1370 ;;		Nothing
  1371 ;; This function is called by:
  1372 ;;		_SYSTEM_Initialize
  1373 ;; This function uses a non-reentrant model
  1374 ;;
  1375                           
  1376                           	psect	text5
  1377  0005E0                     __ptext5:
  1378                           	opt stack 0
  1379  0005E0                     _OSCILLATOR_Initialize:
  1380                           	opt stack 27
  1381                           
  1382                           ;mcc.c: 123: OSCCON = 0x60;
  1383                           
  1384                           ; BSR set to: 15
  1385                           ;incstack = 0
  1386  0005E0  0E60               	movlw	96
  1387  0005E2  6ED3               	movwf	4051,c	;volatile
  1388                           
  1389                           ;mcc.c: 125: OSCCON2 = 0x04;
  1390  0005E4  0E04               	movlw	4
  1391  0005E6  6ED2               	movwf	4050,c	;volatile
  1392                           
  1393                           ;mcc.c: 127: OSCTUNE = 0x00;
  1394  0005E8  0E00               	movlw	0
  1395  0005EA  6E9B               	movwf	3995,c	;volatile
  1396  0005EC  0012               	return		;funcret
  1397  0005EE                     __end_of_OSCILLATOR_Initialize:
  1398                           	opt stack 0
  1399                           tblptru	equ	0xFF8
  1400                           prodh	equ	0xFF4
  1401                           prodl	equ	0xFF3
  1402                           intcon	equ	0xFF2
  1403                           intcon2	equ	0xFF1
  1404                           postinc0	equ	0xFEE
  1405                           wreg	equ	0xFE8
  1406                           indf2	equ	0xFDF
  1407                           fsr2h	equ	0xFDA
  1408                           fsr2l	equ	0xFD9
  1409                           status	equ	0xFD8
  1410                           
  1411 ;; *************** function _INTERRUPT_Initialize *****************
  1412 ;; Defined at:
  1413 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  1414 ;; Parameters:    Size  Location     Type
  1415 ;;		None
  1416 ;; Auto vars:     Size  Location     Type
  1417 ;;		None
  1418 ;; Return value:  Size  Location     Type
  1419 ;;		None               void
  1420 ;; Registers used:
  1421 ;;		None
  1422 ;; Tracked objects:
  1423 ;;		On entry : 0/0
  1424 ;;		On exit  : 0/0
  1425 ;;		Unchanged: 0/0
  1426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1427 ;;      Params:         0       0       0       0       0       0       0
  1428 ;;      Locals:         0       0       0       0       0       0       0
  1429 ;;      Temps:          0       0       0       0       0       0       0
  1430 ;;      Totals:         0       0       0       0       0       0       0
  1431 ;;Total ram usage:        0 bytes
  1432 ;; Hardware stack levels used:    1
  1433 ;; Hardware stack levels required when called:    2
  1434 ;; This function calls:
  1435 ;;		Nothing
  1436 ;; This function is called by:
  1437 ;;		_SYSTEM_Initialize
  1438 ;; This function uses a non-reentrant model
  1439 ;;
  1440                           
  1441                           	psect	text6
  1442  0005EE                     __ptext6:
  1443                           	opt stack 0
  1444  0005EE                     _INTERRUPT_Initialize:
  1445                           	opt stack 27
  1446                           
  1447                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  1448                           
  1449                           ;incstack = 0
  1450  0005EE  9ED0               	bcf	4048,7,c	;volatile
  1451  0005F0  0012               	return		;funcret
  1452  0005F2                     __end_of_INTERRUPT_Initialize:
  1453                           	opt stack 0
  1454                           tblptru	equ	0xFF8
  1455                           prodh	equ	0xFF4
  1456                           prodl	equ	0xFF3
  1457                           intcon	equ	0xFF2
  1458                           intcon2	equ	0xFF1
  1459                           postinc0	equ	0xFEE
  1460                           wreg	equ	0xFE8
  1461                           indf2	equ	0xFDF
  1462                           fsr2h	equ	0xFDA
  1463                           fsr2l	equ	0xFD9
  1464                           status	equ	0xFD8
  1465                           
  1466 ;; *************** function _EUSART1_Initialize *****************
  1467 ;; Defined at:
  1468 ;;		line 75 in file "mcc_generated_files/eusart1.c"
  1469 ;; Parameters:    Size  Location     Type
  1470 ;;		None
  1471 ;; Auto vars:     Size  Location     Type
  1472 ;;		None
  1473 ;; Return value:  Size  Location     Type
  1474 ;;		None               void
  1475 ;; Registers used:
  1476 ;;		wreg, status,2
  1477 ;; Tracked objects:
  1478 ;;		On entry : 0/0
  1479 ;;		On exit  : 0/0
  1480 ;;		Unchanged: 0/0
  1481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1482 ;;      Params:         0       0       0       0       0       0       0
  1483 ;;      Locals:         0       0       0       0       0       0       0
  1484 ;;      Temps:          0       0       0       0       0       0       0
  1485 ;;      Totals:         0       0       0       0       0       0       0
  1486 ;;Total ram usage:        0 bytes
  1487 ;; Hardware stack levels used:    1
  1488 ;; Hardware stack levels required when called:    2
  1489 ;; This function calls:
  1490 ;;		Nothing
  1491 ;; This function is called by:
  1492 ;;		_SYSTEM_Initialize
  1493 ;;		_sendString
  1494 ;; This function uses a non-reentrant model
  1495 ;;
  1496                           
  1497                           	psect	text7
  1498  000522                     __ptext7:
  1499                           	opt stack 0
  1500  000522                     _EUSART1_Initialize:
  1501                           	opt stack 27
  1502                           
  1503                           ;eusart1.c: 78: PIE1bits.RC1IE = 0;
  1504                           
  1505                           ;incstack = 0
  1506  000522  9A9D               	bcf	3997,5,c	;volatile
  1507                           
  1508                           ;eusart1.c: 79: PIE1bits.TX1IE = 0;
  1509  000524  989D               	bcf	3997,4,c	;volatile
  1510                           
  1511                           ;eusart1.c: 84: BAUDCON1 = 0x08;
  1512  000526  0E08               	movlw	8
  1513  000528  6EB8               	movwf	4024,c	;volatile
  1514                           
  1515                           ;eusart1.c: 87: RCSTA1 = 0x90;
  1516  00052A  0E90               	movlw	144
  1517  00052C  6EAB               	movwf	4011,c	;volatile
  1518                           
  1519                           ;eusart1.c: 90: TXSTA1 = 0x24;
  1520  00052E  0E24               	movlw	36
  1521  000530  6EAC               	movwf	4012,c	;volatile
  1522                           
  1523                           ;eusart1.c: 93: SPBRG1 = 0xCF;
  1524  000532  0ECF               	movlw	207
  1525  000534  6EAF               	movwf	4015,c	;volatile
  1526                           
  1527                           ;eusart1.c: 96: SPBRGH1 = 0x00;
  1528  000536  0E00               	movlw	0
  1529  000538  6EB0               	movwf	4016,c	;volatile
  1530                           
  1531                           ;eusart1.c: 100: eusart1TxHead = 0;
  1532  00053A  0E00               	movlw	0
  1533  00053C  6E24               	movwf	_eusart1TxHead,c
  1534                           
  1535                           ;eusart1.c: 101: eusart1TxTail = 0;
  1536  00053E  0E00               	movlw	0
  1537  000540  6E25               	movwf	_eusart1TxTail,c
  1538                           
  1539                           ;eusart1.c: 102: eusart1TxBufferRemaining = sizeof(eusart1TxBuffer);
  1540  000542  0E08               	movlw	8
  1541  000544  6E3B               	movwf	_eusart1TxBufferRemaining,c	;volatile
  1542                           
  1543                           ;eusart1.c: 104: eusart1RxHead = 0;
  1544  000546  0E00               	movlw	0
  1545  000548  6E22               	movwf	_eusart1RxHead,c
  1546                           
  1547                           ;eusart1.c: 105: eusart1RxTail = 0;
  1548  00054A  0E00               	movlw	0
  1549  00054C  6E23               	movwf	_eusart1RxTail,c
  1550                           
  1551                           ;eusart1.c: 106: eusart1RxCount = 0;
  1552  00054E  0E00               	movlw	0
  1553  000550  6E21               	movwf	_eusart1RxCount,c	;volatile
  1554                           
  1555                           ;eusart1.c: 109: PIE1bits.RC1IE = 1;
  1556  000552  8A9D               	bsf	3997,5,c	;volatile
  1557  000554  0012               	return		;funcret
  1558  000556                     __end_of_EUSART1_Initialize:
  1559                           	opt stack 0
  1560                           tblptru	equ	0xFF8
  1561                           prodh	equ	0xFF4
  1562                           prodl	equ	0xFF3
  1563                           intcon	equ	0xFF2
  1564                           intcon2	equ	0xFF1
  1565                           postinc0	equ	0xFEE
  1566                           wreg	equ	0xFE8
  1567                           indf2	equ	0xFDF
  1568                           fsr2h	equ	0xFDA
  1569                           fsr2l	equ	0xFD9
  1570                           status	equ	0xFD8
  1571                           
  1572 ;; *************** function _EUSART1_Read *****************
  1573 ;; Defined at:
  1574 ;;		line 112 in file "mcc_generated_files/eusart1.c"
  1575 ;; Parameters:    Size  Location     Type
  1576 ;;		None
  1577 ;; Auto vars:     Size  Location     Type
  1578 ;;  readValue       1   14[COMRAM] unsigned char 
  1579 ;; Return value:  Size  Location     Type
  1580 ;;                  1    wreg      unsigned char 
  1581 ;; Registers used:
  1582 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1583 ;; Tracked objects:
  1584 ;;		On entry : 0/0
  1585 ;;		On exit  : 0/0
  1586 ;;		Unchanged: 0/0
  1587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1588 ;;      Params:         0       0       0       0       0       0       0
  1589 ;;      Locals:         1       0       0       0       0       0       0
  1590 ;;      Temps:          0       0       0       0       0       0       0
  1591 ;;      Totals:         1       0       0       0       0       0       0
  1592 ;;Total ram usage:        1 bytes
  1593 ;; Hardware stack levels used:    1
  1594 ;; Hardware stack levels required when called:    2
  1595 ;; This function calls:
  1596 ;;		Nothing
  1597 ;; This function is called by:
  1598 ;;		_main
  1599 ;;		_getch
  1600 ;; This function uses a non-reentrant model
  1601 ;;
  1602                           
  1603                           	psect	text8
  1604  0004E8                     __ptext8:
  1605                           	opt stack 0
  1606  0004E8                     _EUSART1_Read:
  1607                           	opt stack 28
  1608                           
  1609                           ;eusart1.c: 114: uint8_t readValue = 0;
  1610                           
  1611                           ;incstack = 0
  1612  0004E8  0E00               	movlw	0
  1613  0004EA  6E34               	movwf	EUSART1_Read@readValue,c
  1614                           
  1615                           ;eusart1.c: 116: while(0 == eusart1RxCount)
  1616  0004EC  D000               	goto	l1097
  1617  0004EE                     l1097:
  1618  0004EE  5021               	movf	_eusart1RxCount,w,c	;volatile
  1619  0004F0  B4D8               	btfsc	status,2,c
  1620  0004F2  D7FD               	goto	l1097
  1621                           
  1622                           ;eusart1.c: 118: }
  1623                           ;eusart1.c: 120: readValue = eusart1RxBuffer[eusart1RxTail++];
  1624  0004F4  5023               	movf	_eusart1RxTail,w,c
  1625  0004F6  0D01               	mullw	1
  1626  0004F8  0E11               	movlw	low _eusart1RxBuffer
  1627  0004FA  24F3               	addwf	prodl,w,c
  1628  0004FC  6ED9               	movwf	fsr2l,c
  1629  0004FE  0E00               	movlw	high _eusart1RxBuffer
  1630  000500  20F4               	addwfc	prodh,w,c
  1631  000502  6EDA               	movwf	fsr2h,c
  1632  000504  50DF               	movf	indf2,w,c
  1633  000506  6E34               	movwf	EUSART1_Read@readValue,c
  1634  000508  2A23               	incf	_eusart1RxTail,f,c
  1635                           
  1636                           ;eusart1.c: 121: if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
  1637  00050A  0E07               	movlw	7
  1638  00050C  6423               	cpfsgt	_eusart1RxTail,c
  1639  00050E  D003               	goto	l1107
  1640                           
  1641                           ;eusart1.c: 122: {
  1642                           ;eusart1.c: 123: eusart1RxTail = 0;
  1643  000510  0E00               	movlw	0
  1644  000512  6E23               	movwf	_eusart1RxTail,c
  1645  000514  D000               	goto	l1107
  1646  000516                     l1107:
  1647                           
  1648                           ;eusart1.c: 124: }
  1649                           ;eusart1.c: 125: PIE1bits.RC1IE = 0;
  1650  000516  9A9D               	bcf	3997,5,c	;volatile
  1651                           
  1652                           ;eusart1.c: 126: eusart1RxCount--;
  1653  000518  0621               	decf	_eusart1RxCount,f,c	;volatile
  1654                           
  1655                           ;eusart1.c: 127: PIE1bits.RC1IE = 1;
  1656  00051A  8A9D               	bsf	3997,5,c	;volatile
  1657                           
  1658                           ;eusart1.c: 129: return readValue;
  1659  00051C  5034               	movf	EUSART1_Read@readValue,w,c
  1660  00051E  0012               	return	
  1661  000520  0012               	return		;funcret
  1662  000522                     __end_of_EUSART1_Read:
  1663                           	opt stack 0
  1664                           tblptru	equ	0xFF8
  1665                           prodh	equ	0xFF4
  1666                           prodl	equ	0xFF3
  1667                           intcon	equ	0xFF2
  1668                           intcon2	equ	0xFF1
  1669                           postinc0	equ	0xFEE
  1670                           wreg	equ	0xFE8
  1671                           indf2	equ	0xFDF
  1672                           fsr2h	equ	0xFDA
  1673                           fsr2l	equ	0xFD9
  1674                           status	equ	0xFD8
  1675                           
  1676 ;; *************** function _INTERRUPT_InterruptManager *****************
  1677 ;; Defined at:
  1678 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
  1679 ;; Parameters:    Size  Location     Type
  1680 ;;		None
  1681 ;; Auto vars:     Size  Location     Type
  1682 ;;		None
  1683 ;; Return value:  Size  Location     Type
  1684 ;;		None               void
  1685 ;; Registers used:
  1686 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1687 ;; Tracked objects:
  1688 ;;		On entry : 0/0
  1689 ;;		On exit  : 0/0
  1690 ;;		Unchanged: 0/0
  1691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1692 ;;      Params:         0       0       0       0       0       0       0
  1693 ;;      Locals:         0       0       0       0       0       0       0
  1694 ;;      Temps:         14       0       0       0       0       0       0
  1695 ;;      Totals:        14       0       0       0       0       0       0
  1696 ;;Total ram usage:       14 bytes
  1697 ;; Hardware stack levels used:    1
  1698 ;; Hardware stack levels required when called:    1
  1699 ;; This function calls:
  1700 ;;		_EUSART1_Receive_ISR
  1701 ;;		_EUSART1_Transmit_ISR
  1702 ;; This function is called by:
  1703 ;;		Interrupt level 2
  1704 ;; This function uses a non-reentrant model
  1705 ;;
  1706                           
  1707                           	psect	intcode
  1708  000008                     __pintcode:
  1709                           	opt stack 0
  1710  000008                     _INTERRUPT_InterruptManager:
  1711                           	opt stack 27
  1712                           
  1713                           ;incstack = 0
  1714  000008  CFFA F026          	movff	pclath,??_INTERRUPT_InterruptManager
  1715  00000C  CFFB F027          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  1716  000010  CFE9 F028          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  1717  000014  CFEA F029          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  1718  000018  CFE1 F02A          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  1719  00001C  CFE2 F02B          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  1720  000020  CFD9 F02C          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  1721  000024  CFDA F02D          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  1722  000028  CFF3 F02E          	movff	prodl,??_INTERRUPT_InterruptManager+8
  1723  00002C  CFF4 F02F          	movff	prodh,??_INTERRUPT_InterruptManager+9
  1724  000030  CFF6 F030          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  1725  000034  CFF7 F031          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  1726  000038  CFF8 F032          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  1727  00003C  CFF5 F033          	movff	tablat,??_INTERRUPT_InterruptManager+13
  1728                           
  1729                           ;interrupt_manager.c: 60: if(INTCONbits.PEIE == 1 && PIE1bits.TX1IE == 1 && PIR1bits.TX1
      +                          IF == 1)
  1730  000040  BCF2               	btfsc	intcon,6,c	;volatile
  1731  000042  A89D               	btfss	3997,4,c	;volatile
  1732  000044  D005               	goto	i2l148
  1733  000046  A89E               	btfss	3998,4,c	;volatile
  1734  000048  D003               	goto	i2l148
  1735                           
  1736                           ;interrupt_manager.c: 61: {
  1737                           ;interrupt_manager.c: 62: EUSART1_Transmit_ISR();
  1738  00004A  ECAB  F002         	call	_EUSART1_Transmit_ISR	;wreg free
  1739                           
  1740                           ;interrupt_manager.c: 63: }
  1741  00004E  D008               	goto	i2l152
  1742  000050                     i2l148:
  1743                           
  1744                           ;interrupt_manager.c: 64: else if(INTCONbits.PEIE == 1 && PIE1bits.RC1IE == 1 && PIR1bit
      +                          s.RC1IF == 1)
  1745  000050  BCF2               	btfsc	intcon,6,c	;volatile
  1746  000052  AA9D               	btfss	3997,5,c	;volatile
  1747  000054  D005               	goto	i2l152
  1748  000056  AA9E               	btfss	3998,5,c	;volatile
  1749  000058  D003               	goto	i2l152
  1750                           
  1751                           ;interrupt_manager.c: 65: {
  1752                           ;interrupt_manager.c: 66: EUSART1_Receive_ISR();
  1753  00005A  ECC4  F002         	call	_EUSART1_Receive_ISR	;wreg free
  1754                           
  1755                           ;interrupt_manager.c: 68: else
  1756                           ;interrupt_manager.c: 69: {
  1757                           
  1758                           ;interrupt_manager.c: 67: }
  1759  00005E  D000               	goto	i2l152
  1760  000060                     i2l152:
  1761  000060  C033  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  1762  000064  C032  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  1763  000068  C031  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  1764  00006C  C030  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  1765  000070  C02F  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  1766  000074  C02E  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  1767  000078  C02D  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  1768  00007C  C02C  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  1769  000080  C02B  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  1770  000084  C02A  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  1771  000088  C029  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  1772  00008C  C028  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  1773  000090  C027  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  1774  000094  C026  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  1775  000098  0011               	retfie		f
  1776  00009A                     __end_of_INTERRUPT_InterruptManager:
  1777                           	opt stack 0
  1778                           pclatu	equ	0xFFB
  1779                           pclath	equ	0xFFA
  1780                           tblptru	equ	0xFF8
  1781                           tblptrh	equ	0xFF7
  1782                           tblptrl	equ	0xFF6
  1783                           tablat	equ	0xFF5
  1784                           prodh	equ	0xFF4
  1785                           prodl	equ	0xFF3
  1786                           intcon	equ	0xFF2
  1787                           intcon2	equ	0xFF1
  1788                           postinc0	equ	0xFEE
  1789                           fsr0h	equ	0xFEA
  1790                           fsr0l	equ	0xFE9
  1791                           wreg	equ	0xFE8
  1792                           fsr1h	equ	0xFE2
  1793                           fsr1l	equ	0xFE1
  1794                           indf2	equ	0xFDF
  1795                           fsr2h	equ	0xFDA
  1796                           fsr2l	equ	0xFD9
  1797                           status	equ	0xFD8
  1798                           
  1799 ;; *************** function _EUSART1_Transmit_ISR *****************
  1800 ;; Defined at:
  1801 ;;		line 165 in file "mcc_generated_files/eusart1.c"
  1802 ;; Parameters:    Size  Location     Type
  1803 ;;		None
  1804 ;; Auto vars:     Size  Location     Type
  1805 ;;		None
  1806 ;; Return value:  Size  Location     Type
  1807 ;;		None               void
  1808 ;; Registers used:
  1809 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1810 ;; Tracked objects:
  1811 ;;		On entry : 0/0
  1812 ;;		On exit  : 0/0
  1813 ;;		Unchanged: 0/0
  1814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1815 ;;      Params:         0       0       0       0       0       0       0
  1816 ;;      Locals:         0       0       0       0       0       0       0
  1817 ;;      Temps:          0       0       0       0       0       0       0
  1818 ;;      Totals:         0       0       0       0       0       0       0
  1819 ;;Total ram usage:        0 bytes
  1820 ;; Hardware stack levels used:    1
  1821 ;; This function calls:
  1822 ;;		Nothing
  1823 ;; This function is called by:
  1824 ;;		_INTERRUPT_InterruptManager
  1825 ;; This function uses a non-reentrant model
  1826 ;;
  1827                           
  1828                           	psect	text10
  1829  000556                     __ptext10:
  1830                           	opt stack 0
  1831  000556                     _EUSART1_Transmit_ISR:
  1832                           	opt stack 27
  1833                           
  1834                           ;eusart1.c: 169: if(sizeof(eusart1TxBuffer) > eusart1TxBufferRemaining)
  1835                           
  1836                           ;incstack = 0
  1837  000556  0E08               	movlw	8
  1838  000558  603B               	cpfslt	_eusart1TxBufferRemaining,c	;volatile
  1839  00055A  D013               	goto	i2l82
  1840                           
  1841                           ;eusart1.c: 170: {
  1842                           ;eusart1.c: 171: TXREG1 = eusart1TxBuffer[eusart1TxTail++];
  1843  00055C  5025               	movf	_eusart1TxTail,w,c
  1844  00055E  0D01               	mullw	1
  1845  000560  0E19               	movlw	low _eusart1TxBuffer
  1846  000562  24F3               	addwf	prodl,w,c
  1847  000564  6ED9               	movwf	fsr2l,c
  1848  000566  0E00               	movlw	high _eusart1TxBuffer
  1849  000568  20F4               	addwfc	prodh,w,c
  1850  00056A  6EDA               	movwf	fsr2h,c
  1851  00056C  50DF               	movf	indf2,w,c
  1852  00056E  6EAD               	movwf	4013,c	;volatile
  1853  000570  2A25               	incf	_eusart1TxTail,f,c
  1854                           
  1855                           ;eusart1.c: 172: if(sizeof(eusart1TxBuffer) <= eusart1TxTail)
  1856  000572  0E07               	movlw	7
  1857  000574  6425               	cpfsgt	_eusart1TxTail,c
  1858  000576  D003               	goto	i2l1127
  1859                           
  1860                           ;eusart1.c: 173: {
  1861                           ;eusart1.c: 174: eusart1TxTail = 0;
  1862  000578  0E00               	movlw	0
  1863  00057A  6E25               	movwf	_eusart1TxTail,c
  1864  00057C  D000               	goto	i2l1127
  1865  00057E                     i2l1127:
  1866                           
  1867                           ;eusart1.c: 175: }
  1868                           ;eusart1.c: 176: eusart1TxBufferRemaining++;
  1869  00057E  2A3B               	incf	_eusart1TxBufferRemaining,f,c	;volatile
  1870                           
  1871                           ;eusart1.c: 177: }
  1872  000580  0012               	return	
  1873  000582                     i2l82:
  1874                           
  1875                           ;eusart1.c: 178: else
  1876                           ;eusart1.c: 179: {
  1877                           ;eusart1.c: 180: PIE1bits.TX1IE = 0;
  1878  000582  989D               	bcf	3997,4,c	;volatile
  1879  000584  0012               	return	
  1880  000586  0012               	return		;funcret
  1881  000588                     __end_of_EUSART1_Transmit_ISR:
  1882                           	opt stack 0
  1883                           pclatu	equ	0xFFB
  1884                           pclath	equ	0xFFA
  1885                           tblptru	equ	0xFF8
  1886                           tblptrh	equ	0xFF7
  1887                           tblptrl	equ	0xFF6
  1888                           tablat	equ	0xFF5
  1889                           prodh	equ	0xFF4
  1890                           prodl	equ	0xFF3
  1891                           intcon	equ	0xFF2
  1892                           intcon2	equ	0xFF1
  1893                           postinc0	equ	0xFEE
  1894                           fsr0h	equ	0xFEA
  1895                           fsr0l	equ	0xFE9
  1896                           wreg	equ	0xFE8
  1897                           fsr1h	equ	0xFE2
  1898                           fsr1l	equ	0xFE1
  1899                           indf2	equ	0xFDF
  1900                           fsr2h	equ	0xFDA
  1901                           fsr2l	equ	0xFD9
  1902                           status	equ	0xFD8
  1903                           
  1904 ;; *************** function _EUSART1_Receive_ISR *****************
  1905 ;; Defined at:
  1906 ;;		line 184 in file "mcc_generated_files/eusart1.c"
  1907 ;; Parameters:    Size  Location     Type
  1908 ;;		None
  1909 ;; Auto vars:     Size  Location     Type
  1910 ;;		None
  1911 ;; Return value:  Size  Location     Type
  1912 ;;		None               void
  1913 ;; Registers used:
  1914 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1915 ;; Tracked objects:
  1916 ;;		On entry : 0/0
  1917 ;;		On exit  : 0/0
  1918 ;;		Unchanged: 0/0
  1919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1920 ;;      Params:         0       0       0       0       0       0       0
  1921 ;;      Locals:         0       0       0       0       0       0       0
  1922 ;;      Temps:          0       0       0       0       0       0       0
  1923 ;;      Totals:         0       0       0       0       0       0       0
  1924 ;;Total ram usage:        0 bytes
  1925 ;; Hardware stack levels used:    1
  1926 ;; This function calls:
  1927 ;;		Nothing
  1928 ;; This function is called by:
  1929 ;;		_INTERRUPT_InterruptManager
  1930 ;; This function uses a non-reentrant model
  1931 ;;
  1932                           
  1933                           	psect	text11
  1934  000588                     __ptext11:
  1935                           	opt stack 0
  1936  000588                     _EUSART1_Receive_ISR:
  1937                           	opt stack 27
  1938                           
  1939                           ;eusart1.c: 187: if(1 == RCSTA1bits.OERR)
  1940                           
  1941                           ;incstack = 0
  1942  000588  A2AB               	btfss	4011,1,c	;volatile
  1943  00058A  D003               	goto	i2l1133
  1944                           
  1945                           ;eusart1.c: 188: {
  1946                           ;eusart1.c: 191: RCSTA1bits.CREN = 0;
  1947  00058C  98AB               	bcf	4011,4,c	;volatile
  1948                           
  1949                           ;eusart1.c: 192: RCSTA1bits.CREN = 1;
  1950  00058E  88AB               	bsf	4011,4,c	;volatile
  1951  000590  D000               	goto	i2l1133
  1952  000592                     i2l1133:
  1953                           
  1954                           ;eusart1.c: 193: }
  1955                           ;eusart1.c: 196: eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  1956  000592  5022               	movf	_eusart1RxHead,w,c
  1957  000594  0D01               	mullw	1
  1958  000596  0E11               	movlw	low _eusart1RxBuffer
  1959  000598  24F3               	addwf	prodl,w,c
  1960  00059A  6ED9               	movwf	fsr2l,c
  1961  00059C  0E00               	movlw	high _eusart1RxBuffer
  1962  00059E  20F4               	addwfc	prodh,w,c
  1963  0005A0  6EDA               	movwf	fsr2h,c
  1964  0005A2  CFAE FFDF          	movff	4014,indf2	;volatile
  1965  0005A6  2A22               	incf	_eusart1RxHead,f,c
  1966                           
  1967                           ;eusart1.c: 197: if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  1968  0005A8  0E07               	movlw	7
  1969  0005AA  6422               	cpfsgt	_eusart1RxHead,c
  1970  0005AC  D003               	goto	i2l1141
  1971                           
  1972                           ;eusart1.c: 198: {
  1973                           ;eusart1.c: 199: eusart1RxHead = 0;
  1974  0005AE  0E00               	movlw	0
  1975  0005B0  6E22               	movwf	_eusart1RxHead,c
  1976  0005B2  D000               	goto	i2l1141
  1977  0005B4                     i2l1141:
  1978                           
  1979                           ;eusart1.c: 200: }
  1980                           ;eusart1.c: 201: eusart1RxCount++;
  1981  0005B4  2A21               	incf	_eusart1RxCount,f,c	;volatile
  1982  0005B6  0012               	return		;funcret
  1983  0005B8                     __end_of_EUSART1_Receive_ISR:
  1984                           	opt stack 0
  1985  0000                     pclatu	equ	0xFFB
  1986                           pclath	equ	0xFFA
  1987                           tblptru	equ	0xFF8
  1988                           tblptrh	equ	0xFF7
  1989                           tblptrl	equ	0xFF6
  1990                           tablat	equ	0xFF5
  1991                           prodh	equ	0xFF4
  1992                           prodl	equ	0xFF3
  1993                           intcon	equ	0xFF2
  1994                           intcon2	equ	0xFF1
  1995                           postinc0	equ	0xFEE
  1996                           fsr0h	equ	0xFEA
  1997                           fsr0l	equ	0xFE9
  1998                           wreg	equ	0xFE8
  1999                           fsr1h	equ	0xFE2
  2000                           fsr1l	equ	0xFE1
  2001                           indf2	equ	0xFDF
  2002                           fsr2h	equ	0xFDA
  2003                           fsr2l	equ	0xFD9
  2004                           status	equ	0xFD8
  2005                           pclatu	equ	0xFFB
  2006                           pclath	equ	0xFFA
  2007                           tblptru	equ	0xFF8
  2008                           tblptrh	equ	0xFF7
  2009                           tblptrl	equ	0xFF6
  2010                           tablat	equ	0xFF5
  2011                           prodh	equ	0xFF4
  2012                           prodl	equ	0xFF3
  2013                           intcon	equ	0xFF2
  2014                           intcon2	equ	0xFF1
  2015                           postinc0	equ	0xFEE
  2016                           fsr0h	equ	0xFEA
  2017                           fsr0l	equ	0xFE9
  2018                           wreg	equ	0xFE8
  2019                           fsr1h	equ	0xFE2
  2020                           fsr1l	equ	0xFE1
  2021                           indf2	equ	0xFDF
  2022                           fsr2h	equ	0xFDA
  2023                           fsr2l	equ	0xFD9
  2024                           status	equ	0xFD8
  2025                           
  2026                           	psect	rparam
  2027  0000                     pclatu	equ	0xFFB
  2028                           pclath	equ	0xFFA
  2029                           tblptru	equ	0xFF8
  2030                           tblptrh	equ	0xFF7
  2031                           tblptrl	equ	0xFF6
  2032                           tablat	equ	0xFF5
  2033                           prodh	equ	0xFF4
  2034                           prodl	equ	0xFF3
  2035                           intcon	equ	0xFF2
  2036                           intcon2	equ	0xFF1
  2037                           postinc0	equ	0xFEE
  2038                           fsr0h	equ	0xFEA
  2039                           fsr0l	equ	0xFE9
  2040                           wreg	equ	0xFE8
  2041                           fsr1h	equ	0xFE2
  2042                           fsr1l	equ	0xFE1
  2043                           indf2	equ	0xFDF
  2044                           fsr2h	equ	0xFDA
  2045                           fsr2l	equ	0xFD9
  2046                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         37
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     20      59
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_relayControl
    _relayControl->_EUSART1_Write

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     120
                                             19 COMRAM     1     1      0
                       _EUSART1_Read
                  _SYSTEM_Initialize
                       _relayControl
 ---------------------------------------------------------------------------------
 (1) _relayControl                                         4     4      0      90
                                             15 COMRAM     4     4      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Write                                        1     1      0      30
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _INTERRUPT_InterruptManager                          14    14      0       0
                                              0 COMRAM    14    14      0
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
 ---------------------------------------------------------------------------------
 (4) _EUSART1_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _EUSART1_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Read
   _SYSTEM_Initialize
     _EUSART1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _relayControl
     _EUSART1_Write

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART1_Receive_ISR
   _EUSART1_Transmit_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     14      3B       1       62.1%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3B       9        0.0%
DATA                 0      0      3B      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Thu Apr 12 09:53:47 2018

           _eusart1TxBufferRemaining 003B                                   l70 04BC  
                       __CFG_CP0$OFF 000000                         __CFG_CP1$OFF 000000  
                       __CFG_CP2$OFF 000000                         __CFG_CP3$OFF 000000  
                        __CFG_LVP$ON 000000                                  l301 016C  
                                l310 0178                                  l400 01FC  
                                l304 0170                                  l240 00FC  
                                l313 017C                                  l410 0210  
                                l402 0200                                  l322 0188  
                                l331 0194                                  l307 0174  
                                l251 0110                                  l243 0100  
                                l420 0220                                  l412 0214  
                                l404 0204                                  l340 01A0  
                                l316 0180                                  l325 018C  
                                l261 0124                                  l253 0114  
                                l245 0104                                  l237 00F8  
                                l414 0218                                  l406 0208  
                                l334 0198                                  l423 0224  
                                l343 01A4                                  l319 0184  
                                l271 0138                                  l263 0128  
                                l255 0118                                  l247 0108  
                                l432 0230                                  l408 020C  
                                l352 01B0                                  l328 0190  
                                l441 023C                                  l417 021C  
                                l361 01BC                                  l337 019C  
                                l281 014C                                  l273 013C  
                                l265 012C                                  l257 011C  
                                l249 010C                                  l450 0248  
                                l426 0228                                  l370 01C8  
                                l346 01A8                                  l435 0234  
                                l355 01B4                                  l283 0150  
                                l275 0140                                  l267 0130  
                                l259 0120                                  l444 0240  
                                l364 01C0                                  l292 0160  
                                l453 024C                                  l429 022C  
                                l373 01CC                                  l349 01AC  
                                l285 0154                                  l277 0144  
                                l269 0134                                  l462 0258  
                                l438 0238                                  l390 01E8  
                                l382 01D8                                  l358 01B8  
                                l447 0244                                  l367 01C4  
                                l295 0164                                  l287 0158  
                                l279 0148                                  l456 0250  
                                l392 01EC                                  l384 01DC  
                                l376 01D0                                  l465 025C  
                                l289 015C                                  l394 01F0  
                                l386 01E0                                  l298 0168  
                                l459 0254                                  l379 01D4  
                                l468 0260                                  l396 01F4  
                                l388 01E4                                  l398 01F8  
                       __CFG_CPB$OFF 000000                                  u100 00C4  
                                u110 00F6                                  u207 00DE  
                       __CFG_CPD$OFF 000000                                  prod 000FF3  
                                wreg 000FE8                                 l1107 0516  
                               l1071 04AC                                 l1231 040C  
                               l1161 0264                                 l1153 00C6  
                               l1145 00A2                                 l1241 0420  
                               l1233 0410                                 l1083 04E0  
                               l1147 00AA                                 l1251 0434  
                               l1243 0424                                 l1235 0414  
                               l1227 0404                                 l1085 04E4  
                               l1165 026C                                 l1253 0438  
                               l1245 0428                                 l1237 0418  
                               l1229 0408                                 l1255 043C  
                               l1247 042C                                 l1239 041C  
                               l1097 04EE                                 l1257 0440  
                               l1249 0430                                 l1259 044E  
                               _LATA 000F89                                 _LATB 000F8A  
                               _LATC 000F8B                                 _LATD 000F8C  
                               _LATE 000F8D                                 i2l82 0582  
                               _WPUB 000F61                        _EUSART1_Write 04A8  
                               _main 03B6                        ?_EUSART1_Read 0026  
                               fsr0h 000FEA                                 fsr1h 000FE2  
                               fsr0l 000FE9                                 fsr2h 000FDA  
                               fsr1l 000FE1                                 indf2 000FDF  
                               fsr2l 000FD9                        __CFG_BORV$190 000000  
                               pclat 000FFA                                 prodh 000FF4  
                               prodl 000FF3                                 start 009A  
                      __CFG_IESO$OFF 000000                         ___param_bank 000010  
     __size_of_OSCILLATOR_Initialize 000E        __end_of_OSCILLATOR_Initialize 05EE  
                              ?_main 0026                       __CFG_DEBUG$OFF 000000  
                              i2l152 0060                                i2l148 0050  
                              _TRISA 000F92                                _TRISB 000F93  
                              _TRISC 000F94                                _TRISD 000F95  
                              _TRISE 000F96                                _TFNum 003A  
                      __CFG_WRT0$OFF 000000                        __CFG_WRT1$OFF 000000  
                      __CFG_WRT2$OFF 000000                        __CFG_WRT3$OFF 000000  
               _EUSART1_Transmit_ISR 0556                       __CFG_EBTR0$OFF 000000  
                     __CFG_FCMEN$OFF 000000                       __CFG_EBTR1$OFF 000000  
                     __CFG_EBTR2$OFF 000000                       __CFG_EBTR3$OFF 000000  
                      __CFG_WRTB$OFF 000000                        __CFG_WRTC$OFF 000000  
                      __CFG_WRTD$OFF 000000                       __CFG_EBTRB$OFF 000000  
                 __CFG_MCLRE$EXTMCLR 000000                       ?_EUSART1_Write 0026  
                              tablat 000FF5                       ??_EUSART1_Read 0034  
                              status 000FD8                       __CFG_HFOFST$ON 000000  
                     __CFG_PBADEN$ON 000000                      __initialization 05B8  
         __end_of_EUSART1_Initialize 0556                         __end_of_main 045C  
        ?_INTERRUPT_InterruptManager 0026                               ??_main 0039  
                      __activetblptr 000002                ?_EUSART1_Transmit_ISR 0026  
                             _ANSELA 000F38                               _ANSELB 000F39  
                             _ANSELC 000F3A                               _ANSELD 000F3B  
                             _ANSELE 000F3C                               i2l1141 05B4  
                             i2l1133 0592                               i2l1127 057E  
                     __CFG_WDTEN$OFF 000000                               _RCREG1 000FAE  
                             _RCSTA1 000FAB                               _OSCCON 000FD3  
                             _SPBRG1 000FAF                               _TXREG1 000FAD  
                             _TXSTA1 000FAC                       __CFG_XINST$OFF 000000  
                     __CFG_STVREN$ON 000000                               clear_0 05BE  
                             tblptrh 000FF7                               tblptrl 000FF6  
                             tblptru 000FF8                      ??_EUSART1_Write 0034  
                    _eusart1RxBuffer 0011        __size_of_INTERRUPT_Initialize 0004  
                    _eusart1TxBuffer 0019                    _SYSTEM_Initialize 05CE  
                         __accesstop 0060              __end_of__initialization 05C4  
                 ?_SYSTEM_Initialize 0026                        ___rparam_used 000001  
                     __pcstackCOMRAM 0026                  ??_SYSTEM_Initialize 0034  
               __end_of_EUSART1_Read 0522               ??_EUSART1_Transmit_ISR 0026  
        __end_of_EUSART1_Receive_ISR 05B8                        ?_relayControl 0026  
          __end_of_SYSTEM_Initialize 05E0                        _eusart1RxHead 0022  
                      _eusart1TxHead 0024                        _eusart1RxTail 0023  
                      _eusart1TxTail 0025                      __CFG_PLLCFG$OFF 000000  
                         __pnvCOMRAM 003A                   __CFG_CCP2MX$PORTC1 000000  
                 __CFG_CCP3MX$PORTB5 000000                              _OSCCON2 000FD2  
                     ??_relayControl 0035                              _OSCTUNE 000F9B  
                            _SPBRGH1 000FB0                      __CFG_PWRTEN$OFF 000000  
                            __Hparam 0000                              __Lparam 0000  
                            __pcinit 05B8                              __ramtop 0600  
                            __ptext0 03B6                              __ptext1 009E  
                            __ptext2 04A8                              __ptext3 05CE  
                            __ptext4 045C                              __ptext5 05E0  
                            __ptext6 05EE                              __ptext7 0522  
                            __ptext8 04E8                _OSCILLATOR_Initialize 05E0  
                 _EUSART1_Initialize 0522             ??_PIN_MANAGER_Initialize 0034  
         __size_of_SYSTEM_Initialize 0012                 end_of_initialization 05C4  
                ?_EUSART1_Initialize 0026                        __Lmediumconst 0000  
                            postinc0 000FEE                __size_of_EUSART1_Read 003A  
               ??_EUSART1_Initialize 0034                  EUSART1_Write@txData 0034  
                         main@RxData 0039                         _EUSART1_Read 04E8  
               __end_of_relayControl 03B6         __end_of_INTERRUPT_Initialize 05F2  
             ?_OSCILLATOR_Initialize 0026                  start_initialization 05B8  
    __size_of_PIN_MANAGER_Initialize 004C                __end_of_EUSART1_Write 04E8  
                     _eusart1RxCount 0021                          __pbssCOMRAM 0001  
      __size_of_EUSART1_Transmit_ISR 0032                    relayControl@count 0037  
       __size_of_EUSART1_Receive_ISR 0030               _PIN_MANAGER_Initialize 045C  
                          __pintcode 0008         ??_INTERRUPT_InterruptManager 0026  
                   __CFG_PRICLKEN$ON 000000                             _BAUDCON1 000FB8  
               _INTERRUPT_Initialize 05EE                             _LATAbits 000F89  
                           _LATBbits 000F8A                             _LATCbits 000F8B  
                           _LATDbits 000F8C                             _LATEbits 000F8D  
              __size_of_relayControl 0318                             _PIE1bits 000F9D  
__size_of_INTERRUPT_InterruptManager 0092                             _PIR1bits 000F9E  
                           _RCONbits 000FD0                     __CFG_WDTPS$32768 000000  
                       _relayControl 009E                          _INTCON2bits 000FF1  
              ?_INTERRUPT_Initialize 0026                EUSART1_Read@readValue 0034  
                           __Hrparam 0000                             __Lrparam 0000  
                 __CFG_BOREN$SBORDIS 000000                    __CFG_P2BMX$PORTD2 000000  
            ??_OSCILLATOR_Initialize 0034          __size_of_EUSART1_Initialize 0034  
                   relayControl@data 0036                             __ptext10 0556  
                           __ptext11 0588                        __size_of_main 00A6  
                           _site0_IL 0001   __end_of_INTERRUPT_InterruptManager 009A  
         _INTERRUPT_InterruptManager 0008                  _EUSART1_Receive_ISR 0588  
                         _INTCONbits 000FF2               ??_INTERRUPT_Initialize 0034  
                           intlevel2 0000                 ?_EUSART1_Receive_ISR 0026  
            ?_PIN_MANAGER_Initialize 0026                           _RCSTA1bits 000FAB  
       __end_of_EUSART1_Transmit_ISR 0588               __size_of_EUSART1_Write 0040  
                  __CFG_T3CMX$PORTC0 000000                ??_EUSART1_Receive_ISR 0026  
     __end_of_PIN_MANAGER_Initialize 04A8                    __CFG_FOSC$INTIO67 000000  
